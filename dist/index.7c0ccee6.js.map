{"mappings":"AAAA,MAAM,OAAO,SAAS,cAAc,CAAC;AACrC,MAAM,kBAAkB,SAAS,cAAc,CAAC;AAChD,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,MAAM,SAAS,cAAc,CAAC,WAAW,UAAU,CAAC;AAE1D,IAAI,eAAe,EAAE;AAErB,qCAAqC;AACrC,MAAM,iBAAiB;IACrB,KAAK,gBAAgB,CAAC,UAAU,CAAC;QAC/B,EAAE,cAAc;QAChB,sCAAsC;QACtC;QACA,KAAK,KAAK;IACZ;AACF;AAEA,kCAAkC;AAClC,MAAM,cAAc;IAClB,kBAAkB;IAClB,MAAM,cAAc,SAAS,cAAc,CAAC,eAAe,KAAK;IAChE,MAAM,SAAS,WAAW,SAAS,cAAc,CAAC,UAAU,KAAK;IACjE,MAAM,OAAO,SAAS,cAAc,CAAC,QAAQ,KAAK;IAElD,8BAA8B;IAC9B,MAAM,SAAS,CAAC,0CAA0C,EACxD,SAAS,YAAY,YAAY,SAClC,CAAC,EAAE,KAAK,OAAO,EAAE,YAAY,EAAE,EAAE,OAAO,iCAAiC,CAAC;IAE3E,iCAAiC;IACjC,gBAAgB,kBAAkB,CAAC,cAAc;IAEjD,4BAA4B;IAC5B,MAAM,cAAc;QAAE,IAAI,KAAK,GAAG;QAAI;QAAa;QAAQ;IAAK;IAEhE,4CAA4C;IAC5C,aAAa,IAAI,CAAC;IAElB,oDAAoD;IACpD,aAAa,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC;IAE7C,QAAQ,GAAG,CAAC;AACd;AAEA,8DAA8D;AAC9D,MAAM,WAAW;IACf,2CAA2C;IAC3C,MAAM,qBAAqB,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;IAE3D,IAAI,oBAAoB;QACtB,eAAe,oBAAoB,gCAAgC;QACnE,mBAAmB,OAAO,CAAC,CAAC;YAC1B,0BAA0B;YAC1B,MAAM,SAAS,CAAC,0CAA0C,EACxD,YAAY,IAAI,KAAK,YAAY,YAAY,SAC9C,CAAC,EAAE,YAAY,IAAI,CAAC,OAAO,EAAE,YAAY,WAAW,CAAC,EAAE,EACtD,YAAY,MAAM,CACnB,iCAAiC,CAAC;YACnC,gBAAgB,kBAAkB,CAAC,aAAa;QAClD;IACF;AACF;AAEA,MAAM,aAAa;IACjB,MAAM,SAAS,SAAS,aAAa,CAAC;IACtC,MAAM,UAAU,SAAS,aAAa,CAAC;IACvC,QAAQ,gBAAgB,CAAC,SAAS;QAChC,OAAO,MAAM;IACf;AACF;AAEA,+CAA+C;AAC/C,MAAM,cAAc,IAAI,OAAO,YAAY,GAAG,KAAK,CAAC,GAAG;AACvD,SAAS,SAAS,GAAG,GAAG,aAAa;AAErC,6BAA6B;AAC7B,MAAM,OAAO;IACX;IACA;IACA;AACF;AACA","sources":["app.js"],"sourcesContent":["const form = document.getElementById(\"transaction-form\");\r\nconst transactionList = document.getElementById(\"transaction-list\");\r\nconst dateText = document.getElementById(\"date-text\");\r\nconst ctx = document.getElementById(\"myChart\").getContext(\"2d\");\r\n\r\nlet transactions = [];\r\n\r\n// Function to handle form submission\r\nconst formSubmission = function () {\r\n  form.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    // Render the transaction and store it\r\n    renderTrans();\r\n    form.reset();\r\n  });\r\n};\r\n\r\n// Function to render transactions\r\nconst renderTrans = function () {\r\n  // Get form values\r\n  const description = document.getElementById(\"description\").value;\r\n  const amount = parseFloat(document.getElementById(\"amount\").value);\r\n  const type = document.getElementById(\"type\").value;\r\n\r\n  // Generate transaction markup\r\n  const listEl = `<li class='transactionListEl'><span class=${\r\n    type === \"expense\" ? \"expense\" : \"income\"\r\n  }>${type}</span>${description} $${amount}<span class=\"close\">X</span></li>`;\r\n\r\n  // Render transaction on the page\r\n  transactionList.insertAdjacentHTML(\"afterbegin\", listEl);\r\n\r\n  // Create transaction object\r\n  const transaction = { id: Date.now(), description, amount, type };\r\n\r\n  // Add transaction to the transactions array\r\n  transactions.push(transaction);\r\n\r\n  // Store updated transactions array in local storage\r\n  localStorage.setItem(\"trans\", JSON.stringify(transactions));\r\n\r\n  console.log(transaction);\r\n};\r\n\r\n// Function to load and render transactions from local storage\r\nconst loadData = function () {\r\n  // Retrieve transactions from local storage\r\n  const storedTransactions = JSON.parse(localStorage.getItem(\"trans\"));\r\n\r\n  if (storedTransactions) {\r\n    transactions = storedTransactions; // Update the transactions array\r\n    storedTransactions.forEach((transaction) => {\r\n      // Render each transaction\r\n      const listEl = `<li class='transactionListEl'><span class=${\r\n        transaction.type === \"expense\" ? \"expense\" : \"income\"\r\n      }>${transaction.type}</span>${transaction.description} $${\r\n        transaction.amount\r\n      }<span class=\"close\">X</span></li>`;\r\n      transactionList.insertAdjacentHTML(\"beforeend\", listEl);\r\n    });\r\n  }\r\n};\r\n\r\nconst deleteData = function () {\r\n  const listEL = document.querySelector(\".transactionListEl\");\r\n  const closeEl = document.querySelector(\".close\");\r\n  closeEl.addEventListener(\"click\", function () {\r\n    listEL.remove();\r\n  });\r\n};\r\n\r\n// Setting The Current Date On the Black Navbar\r\nconst currentDate = new Date().toDateString().slice(0, 10);\r\ndateText.innerHTML = `${currentDate}`;\r\n\r\n// Initialize the application\r\nconst init = function () {\r\n  formSubmission();\r\n  loadData();\r\n  deleteData();\r\n};\r\ninit();\r\n"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}